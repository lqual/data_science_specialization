source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack", 20)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
head(rankall("heart attack", 20), 10)
rankall("heart attack")
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankhospital.R')
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
source("http://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
BiocManager::install("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
?splom
library(lattice)
?splom
?trellis.par.set
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(datasets)
> data(airquality)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
data(movies)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5, 1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat| color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat| color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(seq(0,1,len=6))
p1(6)
oxcc
oxCC
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha(.5))
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y.pch = 19, col = rgb(0, .5, .5))
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, co = pal(20))
image(volcano, co = p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth")
)
qplot(y = hwy, data = mpg, col = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(string = "lm")
g+geom_point()+geom_smooth(mmethod = "lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = .5)
g+geom_point(size = 4, alpha = .5, aes(color = drv))
g+geom_point(aes(color = drv), labs(title = "Swirl Rules!"), labs(x = "Displacement", y = "Hwy Mileage"))
g+geom_point(aes(color = drv) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage"))
g+geom_point(aes(color = drv) + geom_labs(title = "Swirl Rules!") + geom_labs(x = "Displacement", y = "Hwy Mileage"))
g+geom_point(aes(color = drv)) + geom_labs(title = "Swirl Rules!") + geom_labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = .5) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line()+ylim(-3,3)
g + geom_line()+coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
g
summary(g)
g + geom_point(alpha - .33)
g + geom_point(alpha = .33)
g + geom_point(alpha =1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length - 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
hc
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = .4, col = "red")
5
5
12
abline(h = .05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
ddistmt
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmobj$iter
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[, 562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[12])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist(x[, 1:3])
mdist <- dist(x[, 1:3])
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[, 10:12], maxCon))
mdist <- dist(c(sub1[, 10:12], sub1$maxCon))
mdist <- dist(c(sub1[, 10], sub1[,11], sub1[,12] maxCon))
mdist <- dist(sub1[, 10:12])
mdist <- dist(sub1[, c(10:12, maxCon])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562:563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562:563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
setwd("~/R Directory/Exploratory_Data_Analysis/Week_4")
data <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(SCC)
str(names(SCC$EI.Sector))
x <- SCC$EI.Sector
levels(x)
EI.Sector <- SCC$EI.Sector
head(EI.Sector)
levels(EI.Sector)
Short.Name <- SCC$Short.Name
levels(Short.Name)
names(SCC)
Level1 <- SCC$SCC.Level.One
Level1 <- SCC$SCC.Level.Two
Level1 <- SCC$SCC.Level.One
Level2 <- SCC$SCC.Level.Two
Level3 <- SCC$SCC.Level.THREE
Level4 <- SCC$SCC.Level.FOUR
head(SCC)
Level3 <- as.factor(SCC$SCC.Level.THREE)
Level4 <- as.factor(SCC$SCC.Level.FOUR)
head(Level3)
head(Level4)
head(Level1)
levels(Level1)
levels(Level2)
levels(EI.Sector)
test <- levels(EI.Sector)
EI.Sector <- SCC$EI.Sector
level <- levels(EI.Sector)
library(stringr)
level1 <- word(level, -1)
level1
level <- word(level, -1)
library(dplyr)
head(SCC)
names(SCC)
SCC2 <- SCC %>% select(SCC, EI.Sector)
head(SCC2)
SCC2$EI.Sector <- word(SCC2$EI.Sector, -1)
head(SCC2)
head(data)
data2 <- data %>% select(fips, SCC, Emissions, year)
head(data2)
?mutate
data2 <- data %>% select(fips, SCC, Emissions, year) %>% mutate(source = match(SCC, SCC2$SCC))
head(data2)
head(SCC2)
SCC2[30:36,]
data2 <- data %>% select(fips, SCC, Emissions, year) %>% mutate(source = SCC2[match(SCC, SCC2$SCC), 2])
head(data2)
SCC2[120:125,]
y <- data2 %>% filter(source == "Coal")
head(y)
y <- data2 %>% filter(source == "Coal") %>% group_by(year) %>%
summarize(total = sum(Emissions))
y
y <- data2 %>% filter(source == "Coal") %>% group_by(year) %>%
summarize(total = sum(Emissions)/1000)
y
y <- data2 %>% filter(source == "Coal") %>% group_by(year) %>%
summarize(total = sum(Emissions))
y
plot(year, total, data = y, color = type, geom = "line", ylab = "Emmissions (tons)",
main = "Total Coal Emmissions in United States from PM2.5")
plot(y[,2], y[,1], color = type, geom = "line", ylab = "Emmissions (tons)",
main = "Total Coal Emmissions in United States from PM2.5")
plot(c(1999, 2002, 2005, 2008), y[,1], color = type, geom = "line", ylab = "Emmissions (tons)",
main = "Total Coal Emmissions in United States from PM2.5")
plot(c(1999, 2002, 2005, 2008), y[,2], color = type, geom = "line", ylab = "Emmissions (tons)",
main = "Total Coal Emmissions in United States from PM2.5")
y[,2]
plot <- qplot(year, total, data = y, color = type, geom = "line", ylab = "Emmissions (tons)",
main = "Total Emmissions by Type in Baltimore City, Maryland from PM2.5")
library(ggplot2)
plot <- qplot(year, total, data = y, color = type, geom = "line", ylab = "Emmissions (tons)",
main = "Total Emmissions by Type in Baltimore City, Maryland from PM2.5")
print(plot)
qplot(year, total, data = y, color = type, geom = "line", ylab = "Emmissions (tons)",
main = "Total Emmissions by Type in Baltimore City, Maryland from PM2.5")
y
qplot(year, total, data = y, color = "black", geom = "line", ylab = "Emmissions (tons)",
main = "Total Emmissions by Type in Baltimore City, Maryland from PM2.5")
plot(y[,2], y[,1])
plot(y[,2])
plot(c(1999, 2002, 2005, 2008), y[,2])
qplot(year, total, data = y, color = "black", geom = "line", ylab = "Emmissions (tons)", main = "Total Emmissions by Type in Baltimore City, Maryland from PM2.5)
)
qplot(year, total, data = y, geom = "line", ylab = "Emmissions (tons)", main = "Total Emmissions by Type in Baltimore City, Maryland from PM2.5)
qplot(year, total, data = y, geom = "line", ylab = "Emmissions (tons)", main = "Total Emmissions by Type in Baltimore City, Maryland from PM2.5")
qplot(year, total, data = y, geom = "line", ylab = "Emmissions (tons)", xlab = "Year", main = "Total Coal Emmissions in United States from PM2.5")
source('~/R Directory/Exploratory_Data_Analysis/Week_4/plot4.R')
source('~/R Directory/Exploratory_Data_Analysis/Week_4/plot4.R')
plot4()
library(stringr)
library(dplyr)
SCC2 <- SCC %>% select(SCC, EI.Sector)
SCC2$EI.Sector <- word(SCC2$EI.Sector, -1)
data2 <- data %>% select(fips, SCC, Emissions, year) %>%
mutate(source = SCC2[match(SCC, SCC2$SCC), 2])
head(data2)
names(data2$source)
summary(data2$source)
unique(data2$source)
y <- data2 %>% filter(source == "Vehicles" & fips == "24510")
head(y)
y <- data2 %>% filter(source == "Vehicles" & fips == "24510") %>% group_by(year) %>%
summarize(total = sum(Emissions))
y
y[,2]
x <- y[,2]
x
z <- data2 %>% filter(source == "Vehicles" & fips == "24510") %>% group_by(year) %>%
summarize(total = sum(Emissions))
z
y <- z[,2]
y <- as.vector(z[,2])
y
x <- z[1:4, 1]
x <- as.vector(z[1:4, 1])
x
plot(x, y)
plot(c(1999, 2002, 2005, 2008), z[,2], type = "b", pch = 16, col = "red",
lwd = 2, xlab = "Year", ylab = "Emmissions (thousand tons)",
main = "Total Emmissions in US from PM2.5")
y <- z %>% pull(total)
y
x <- z %>% pull(year)
x
plot(x, y)
plot(x, y, type = "b", pch = 21, col = "purple",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Total Vehicle Emmissions in Baltimore City, Maryland from PM2.5")
plot(x, y, type = "b", pch = 21, col = "purple",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Total Vehicle Emmissions in Baltimore City from PM2.5")
source('~/R Directory/Exploratory_Data_Analysis/Week_4/plot5.R')
plot5()
library(stringr)
library(dplyr)
SCC2 <- SCC %>% select(SCC, EI.Sector)
SCC2$EI.Sector <- word(SCC2$EI.Sector, -1)
data2 <- data %>% select(fips, SCC, Emissions, year) %>%
mutate(source = SCC2[match(SCC, SCC2$SCC), 2])
head(data2)
balt <- data2 %>% filter(source == "Vehicles" & fips == "24510") %>% group_by(year) %>%
summarize(total = sum(Emissions))
y.balt <- balt %>% pull(total)
x.balt <- balt %>% pull(year)
balt <- data2 %>% filter(source == "Vehicles" & fips == "24510") %>%
group_by(year) %>% summarize(total = sum(Emissions))
y.balt <- balt %>% pull(total)
x.balt <- balt %>% pull(year)
lac <- data2 %>% filter(source == "Vehicles" & fips == "06037") %>%
group_by(year) %>% summarize(total = sum(Emissions))
y.lac <- lac %>% pull(total)
x.lac <- lac %>% pull(year)
par(mfrow(1,2))
par(mfrow = c(1,2))
plot(x.lac, y.lac)
plot(x.lac, y.lac)
range(c(y.balt, y.lac))
y.range <- range(c(y.balt, y.lac))
?floor
floor <- floor(c(y.balt, y.lac), digits = 0)
floor <- floor(y.balt, digits = 0)
floor <- floor(c(y.balt, y.lac))
floor
floor(floor)
y.range
y.rage[1]
y.range[1]
y.range[1] <- 0
y.range
round(y.range[2]+100,0)
round(y.range[2]+100,3)
round(y.range[2]+100,-3)
round(y.range[2]+100,-2)
y.range[2] <- round(y.range[2]+100,-2)
y.range
plot(x.balt, y.balt, type = "b", pch = 24, col = "purple",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Total Vehicle Emmissions in Baltimore City from PM2.5")
plot(x.balt, y.balt, type = "b", pch = 24, col = "purple",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Baltimore City")
plot(x.balt, y.balt, type = "b", pch = 24, col = "purple",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Baltimore City", ylim = y.range)
plot(x.lac, y.lac, type = "b", pch = 24, col = "blue",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Los Angeles County", ylim = y.range)
lac
plot(x.balt, y.balt, type = "b", pch = 24, col = "purple",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Vehicle Emmissions in Baltimore City", ylim = y.range)
plot(x.lac, y.lac, type = "b", pch = 24, col = "blue",
lwd = 2, xlab = "Year", ylab = "Emmissions (tons)",
main = "Vehicle Emmissions in Los Angeles County", ylim = y.range)
source('~/R Directory/Exploratory_Data_Analysis/Week_4/plot6.R')
plot6()
source('~/R Directory/Exploratory_Data_Analysis/Week_4/plot6.R')
source('~/R Directory/Exploratory_Data_Analysis/Week_4/plot6.R')
plot6()
