rankall("heart failure", 5)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack", 20)
rankall("pneumonia", "worst")
rankall("heart failure", "worst")
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart failure", "worst")
rankall("pneumonia", "worst")
rankall("heart attack", 20)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- "heart attack"
num <- 20
state.abb2 <- sort(state.abb)
i <- 10
state <- state.abb2[i]
state_data <- subset(data, data[, 7] == state)
state_data2 <- subset(state_data, select = c(2, 7, 11, 17, 23))
state_data2[, c(3:5)] <- sapply(state_data2[, c(3:5)], as.numeric)
names(state_data2) <- c("hospital", "state", "heart attack", "heart failure",
"pneumonia")
if(outcome == "heart attack") {    attackData <- subset(state_data2, select = c(1,2,4))
orderedData <- attackData[order(state_data2$`heart attack`,state_data2$hospital),]
orderedData2 <- na.omit(orderedData)}
if(num > nrow(orderedData2)) {    num <- "NA"}
print(state)
print(orderedData[num,1])
i <- 9
state <- state.abb2[i]
state
state_data <- subset(data, data[, 7] == state)
> state_data2 <- subset(state_data, select = c(2, 7, 11, 17, 23))
> state_data2[, c(3:5)] <- sapply(state_data2[, c(3:5)], as.numeric)
state_data2 <- subset(state_data, select = c(2, 7, 11, 17, 23))
state_data2[, c(3:5)] <- sapply(state_data2[, c(3:5)], as.numeric)
names(state_data2) <- c("hospital", "state", "heart attack", "heart failure",
+                         "pneumonia")
if(outcome == "heart attack") {    attackData <- subset(state_data2, select = c(1,2,4))
+     orderedData <- attackData[order(state_data2$`heart attack`,state_data2$hospital),]
+     orderedData2 <- na.omit(orderedData)}
if(outcome == "heart attack") {    attackData <- subset(state_data2, select = c(1,2,4))
orderedData <- attackData[order(state_data2$`heart attack`,state_data2$hospital),]
orderedData2 <- na.omit(orderedData)}
if(outcome == "heart attack") {    attackData <- subset(state_data2, select = c(1,2,4))
orderedData <- attackData[order(state_data2$`heart attack`,state_data2$hospital),]
orderedData2 <- na.omit(orderedData)}
outcome <- "heart attack"
num <- 20
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state.abb2 <- sort(state.abb)
i <- 9
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack", 20)
rankall("heart attack", 5)
rankall("heart attack", 10)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankhospital.R')
rankhospital("DC", "heart attack", 10)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankhospital.R')
rankall("heart attack", 20)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack", 20)
rankall("heart attack", 5)
rankall("heart attack", 5)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack", 20)
head(rankall("heart attack", 20), 20)
rankall("pneumonia", "worst")
rankall("heart failure")
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart failure")
rankall("pneumonia", "worst")
rankall("heart attack", 20)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("pneumonia", "worst")
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("pneumonia", "worst")
head(data[,7])
unique(data[, 7])
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
lenght(unique(data[, 7]))
nrow(unique(data[, 7]))
state.abb2 <- sort(c(unique(dat[, 7])))
state.abb2 <- sort(c(unique(data[, 7])))
state.abb2
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack", 20)
rankall("pneumonia", "worst"),
rankall("pneumonia", "worst")
rankall("heart failure")
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
head(rankall("heart attack", 20), 10)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
head(rankall("heart attack", 20), 10)
result <- data.frame(matrix(nrow = 54, ncol = 2))
colnames(result) <- c("hospital", "state")
result
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack", 20)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
head(rankall("heart attack", 20), 10)
rankall("heart attack")
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankall.R')
rankall("heart attack")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/rankhospital.R')
source('C:/Users/Lucas/Desktop/R Directory/R_Program_Course/R_Program_Wk4_Assign3/best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
source("http://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
BiocManager::install("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydt)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time())
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os = "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, r_version == !is.na)
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version) == TRUE)
filter(cran, !is.na(R.version))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
submit()
pack_sum <- summarize(by_package,
count = n(),
unique = n_distinct(country),
countries = n_distinct(country),
avg_bytes = mean(size))
pack_sum
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count()))
top_counts_sorted <- arrange(top_counts, desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = .99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique()))
top_unique_sorted <- arrange(top_unique, desc(unique)
)
View(top_unique_sorted)
submit()
submit()
submit()
View(results3)
View(results3)
View(result3)
cran %>% select(ip_id, country, package, size) %>% print
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
?gather
submit()
?spread
sumbit()
submit()
submit()
library(readr)
parse_number("class5")
?mutate
submit()
students4
?select
submit()
reset()
swirl()
submit()
?unique
submit()
submit()
submit()
submit()
submit()
passed
failed
?mutate
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
stat
sat
?contains
?select
?separate
submit()
submit()
setwd("~/R Directory/Data_Cleaning_Course/Week_3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "Q1.csv")
q1 <- read.csv("Q1.csv")
library(dplyr)
q1 <- mutate(q1, agricultureLogical = ifelse(acr == 3 & ags == 6, TRUE, FALSE))
q1 <- mutate(q1, agricultureLogical = ifelse(q1$acr == 3 & q1$ags == 6, TRUE, FALSE))
dim(q1)
q1 <- read.csv("Q1.csv")
q1 <- mutate(q1, agricultureLogical = ifelse(q1$ACR == 3 & q1$AGS == 6, TRUE, FALSE))
head(q1$ACR)
head(q1$agricultureLogical)
head(q1$ACR, 30)
head(q1$agricultureLogical)
head(q1$agricultureLogical, 30)
which(agricultureLogical)
?which
agricultureLogical <- q1$agricultureLogical
which(agricultureLogical)
install.packages("jpg")
install.packages("jpeg")
library(jpeg)
q2 <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
q2 <- readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "q2.jpg")
q2 <- readJPEG("q2.jpg", native = TRUE)
?download.file
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "q2.jpg", mode = "wb")
q2 <- readJPEG("q2.jpg", native = TRUE)
?quantile
quantile(q2, probs = c(.3, .8))
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "edu.csv")
gdp <- read.csv("gdp.csv")
edu <- read.csv("edu.csv")
dim(gdp)
head(gdp)
dim(edu)
head(edu)
head(edu$CountryCode, 20)
head(gdp$X)
head(gdp$X, 20)
q3 <- merge(gdp, edu, by.x = X, by.y = CountryCode)
q3 <- merge(gdp, edu, by.x = gdp$X, by.y = edu$CountryCode)
gdp2 <- gdp[-c(1:4),]
head(gdp2)
?rename
gdp2 <- rename(gdp2, CountryCode, GDP, Uno, Country, Economy_(mil$))
gdp2 <- rename(gdp2, CountryCode, GDP, Uno, Country, Economy_mil$)
gdp2 <- rename(gdp2, X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy_mil$)
gdp3 <- gdp2[, -c(3, 6:10)]
head(gdp3)
library(dplyr)
gdp2 <- rename(gdp2, X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy_mil$)
gdp3 <- rename(X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy_mil$)
rename(gdp3, X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy_mil$)
library(plyr)
rename(gdp3, X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy_mil$)
rename(gdp3, c(CountryCode, GDP, Country, Economy_mil$)
rename(gdp3, c(CountryCode, GDP, Country, Economy_mil$))
dplyr::rename(gdp3, c(CountryCode, GDP, Country, Economy_mil$))
rename(gdp3, CountryCode = X, GDP = Gross.domestic.product.2012, Country = X.2, Economy_mil$ = X.3)
rename(gdp3, CountryCode = X, GDP = Gross.domestic.product.2012, Country = X.2, Economy = X.3)
rename(gdp3, X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy)
plyr::rename(gdp3, X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy)
rename(gdp3, X = CountryCode)
library(dplyr)
rename(gdp3, X = CountryCode)
head(gdp3)
names(gdp3)
rename(gdp3, c(X = CountryCode, Gross.domestic.product.2012 = GDP, X.2 = Country, X.3 = Economy)
)
rename(gdp3, c(CountryCode = X))
rename(gdp3, c(CountryCode = "X"))
head(gdp3)
gdp3 <- gdp2[, -c(3, 6:10)]
library(plyr)
rename(gdp3, c("CountryCode" = "X"))
head(gdp3)
rename(gdp3, c("X" = "CountryCode"))
gdp3 <- gdp2[, -c(3, 6:10)]
names(gdp3)
gdp3 <- rename(gdp3, c("X" = "CountryCode",
"Gross.domestic.product.2012" = "GDP",
"X.2" = "Country", "X.3" = "Economy"))
head(gdp3)
unique(gdp3$CountryCode)
summary(gdp3, gdp3$Country)
count(unique(gdp3$CountryCode)
)
head(gdp3)
tail(gdp3)
?filter
library(dplyr)
?filter
gdp4 <- filter(gdp3, gdp3$GDP <= 190)
gdp4 <- filter(gdp3, GDP <= 190)
as.numeric(gdp3$GDP)
gdp4 <- filter(gdp3, GDP <= 190)
head(gdp3)
gdp[, c(2, 4)] <- as.numeric(gdp[, c(2, 4)])
gdp[, c(2, 4)] <- sapply(gdp[, c(2, 4)], as.numeric)
gdp3[, c(2, 4)] <- sapply(gdp3[, c(2, 4)], as.numeric)
gdp4 <- filter(gdp3, GDP <= 190)
tail(gdp4)
gdp <- read.csv("gdp.csv")
gdp <- gdp[-c(1:4),]
gdp <- gdp[, -c(3, 6:10)]
gdp <- rename(gdp, c("X" = "CountryCode",
"Gross.domestic.product.2012" = "GDP",
"X.2" = "Country", "X.3" = "Economy"))
gdp$GDP
gdp <- gdp[1:190]
gdp <- gdp[1:190,]
tail(gdp)
gdp[, c(2, 4)] <- sapply(gdp[, c(2, 4)], as.numeric)
head(gdp)
gdp <- read.csv("gdp.csv")
gdp <- gdp[-c(1:4),]
gdp <- gdp[, -c(3, 6:10)]
gdp <- rename(gdp, c("X" = "CountryCode",
"Gross.domestic.product.2012" = "GDP",
"X.2" = "Country", "X.3" = "Economy"))
gdp <- gdp[1:190,]
head(gdp)
class(gdp$GDP)
gdp2 <- arrange(gdp, desc(gdp$GDP))
head(gdp2)
tail(gdp2)
gdp2 <- gdp[1:190,]
gdp2[, c(2, 4)] <- sapply(gdp2[, c(2, 4)], as.integer)
head(gdp2)
head(gdp)
gdp2 <- arrange(gdp, gdp$GDP)
head(gdp2)
head(gdp)
gdp2 <- gdp
gdp2[, c(2, 4)] <- sapply(gdp2[, c(2, 4)], as.character)
head(gdp2)
gdp2[, c(2, 4)] <- sapply(gdp2[, c(2, 4)], as.numeric)
head(gdp2)
gdp2 <- arrange(gdp2, desc(gdp2$GDP))
head(gdp2)
tail(gdp2)
gdp2 <- gdp[1:190,]
gdp2[, c(2, 4)] <- sapply(gdp2[, c(2, 4)], as.character)
gdp2[, c(2, 4)] <- sapply(gdp2[, c(2, 4)], as.integer)
head(gdp2)
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdpClean()
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdpClean()
gdp3
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdpClean()
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdpClean()
gdp <- gdpClean()
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdp <- gdpClean()
head(gdp)
gdp <- data.frame()
gdp <- gdpClean()
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdp <- gdpClean()
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdp <- gdpClean()
head(gdp)
edu <- read.csv(doc)
edu <- read.csv("edu.csv")
head(edu)
names(edu)
edu <- edu[, 1:3]
head(edu)
summarize(edu, edu$Long.Name)
summarize(edu, edu$CountryCode)
head(edu)
summarize(edu, edu$Income.Group)
names(edu$Income.Group)
table(edu$Income.Group)
class(edu$Income.Group)
edu[edu==""]<-NA
class(edu$Income.Group)
table(edu$Income.Group)
head(edu)
head(edu, 30:50)
head(edu, 30)
tail(edu, 40)
edu <- edu[complete.cases(edu)]
edu <- edu[complete.cases(edu),]
tail(edu, 30)
head(edu)
source('~/R Directory/Data_Cleaning_Course/Week_3/eduClean.R')
edu <- eduClean()
head(edu)
source('~/R Directory/Data_Cleaning_Course/Week_3/gdpClean.R')
gdp <- gdpClean()
data <- merge(gdp, edu)
head(data)
data <- merge(gdp, edu, all = TRUE)
head(data)
data <- merge(gdp, edu)
tail(data)
data2 <- arrange(data, data$GDP)
data2 <- arrange(data, desc(data$GDP)
)
tail(data2)
head(data2, 13)
?summarize
data3 <- group_by(dat, "Income.Group")
data3 <- group_by(data, "Income.Group")
head(data3)
data %>% group_by(Income.Group) %>% summarize(GDP)
data %>% group_by(Income.Group) %>% summarize(mean_size =mean(GDP))
class(data$Income.Group)
data3 <- data
data3[, 6] <- as.character(data3[, 6])
data3 %>% group_by(Income.Group) %>% summarize(mean_size =mean(GDP))
grp <- group_by(dat, Income.Group)
grp <- group_by(data, Income.Group)
grp
OECD <- filter(data, Income.Group == "High income: OECD")
OECD
mean(OECD$GDP)
nonOECD <- filter(data, Income.Group == "High income: nonOECD")
mean(nonOECD$GDP)
quantile(data$GDP, 5)
quantile(data$GDP, prob = 5)
?quantile
quantile(data$GDP, probs = 5)
quantile(data$GDP, probs = c(0, 0.2, 0.4, 0.6, 0.8, 1))
quantile(data$GDP)
q5 <- quantile(data$GDP)
q5
q5 <- mutate(data, quantile_rank = ntile(data$GDP,5))
head(q5)
table(q5$quantile_rank, q5$Income.Group)
