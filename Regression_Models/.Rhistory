head(mtcars)
?mtcars
library(dplyr)
data <- mtcars %>% mutate(am = "Trans")
head(data)
data <- mtcars %>% rename(am = "trans")
data <- mtcars %>% rename(am = trans)
data <- mtcars
head(data)
plot(data$am, data$mpg)
plot(data$am, data$mpg, col = "red", pch = 19, ylab = "MPG",
xlab = "Transmission (0 = automatic,1 = manual)",
main = "MPG Based on Transmission Type")
boxplot(data$am, data$mpg, col = "red", pch = 19, ylab = "MPG",
xlab = "Transmission (0 = automatic,1 = manual)",
main = "MPG Based on Transmission Type")
boxplot(data$mpg, col = data$am)
boxplot(mpg ~ am, data = data)
boxplot(mpg ~ am, data = data, col = "red", ylab = "MPG",
xlab = "Transmission (0 = automatic,1 = manual)",
main = "MPG Based on Transmission Type")
#models
fit1 <- lm(mpg ~ am, data = mtcars)
fit1
#models
fit1 <- lm(mpg ~ factor(am), data = mtcars)
fit1
#models
fit1 <- lm(mpg ~ factor(am) - 1, data = mtcars)
ffit1
fit1
fit2 <- lm(mpg ~ ., data = mtcars)
fit2
vif(fit2)
#models
library(car)
vif(fit2)
sqrt(vif(fit2))
anova(fit1, fit2)
pairs(mtcars)
#items that affect MPG similarly given MPG vs variable graphs
group1 <- c("disp", "hp", "wt", "carb")
group2 <- c("drat", "qsec")
group3 <- c("vs", "am")
library(ggplot2)
plot1 <- ggplot(mtcars, aes(x=disp, y=mpg, color=hp)) + geom_point()
plot1
plot1 <- ggplot(mtcars, aes(x=disp, y=mpg, color=hp)) + geom_point() +
scale_color_brewer(palette="YlOrRd")
plot1
plot1 <- ggplot(mtcars, aes(x=disp, y=mpg, color=hp)) + geom_point()
plot1 + scale_color_brewer(palette="Dark2")
plot1
plot2 <- ggplot(mtcars, aes(x=wt, y=mpg, color=hp)) + geom_point()
plot2
plot3 <- ggplot(mtcars, aes(x=carb, y=mpg, color=hp)) + geom_point()
plot3
plot4 <- ggplot(mtcars, aes(x=disp, y=mpg, color=wt)) + geom_point()
plot4
plot5 <- ggplot(mtcars, aes(x=drat, y=mpg, color=qsec)) + geom_point()
plot5
plot5 <- ggplot(mtcars, aes(x=am, y=mpg, color=vs)) + geom_point()
plot5
#items that affect MPG similarly given MPG vs variable graphs
group1 <- c("disp", "hp", "wt", "carb")
group2 <- c("drat", "qsec")
group3 <- c("vs", "am")
fit3 <- lm(mpg ~ factor(am) + hp + drat + qsec + vs, data = mtcars)
summary(fit3)
summary(fit2)
summary(fit1)
fit2 <- lm(mpg ~ cyl, data = mtcars)
summary(fit2)
fit3 <- lm(mpg ~ disp, data = mtcars)
summary(fit3)
fit4 <- lm(mpg ~ hp, data = mtcars)
summary(fit4)
fit5 <- lm(mpg ~ drat, data = mtcars)
summary(fit5)
fit5 <- lm(mpg ~ qsec, data = mtcars)
summary(fit5)
fit2 <- lm(mpg ~ cyl, data = mtcars)
summary(fit2)
fit1 <- lm(mpg ~ factor(am), data = mtcars)
summary(fit1)
cor(mtcars$disp, mtcars$wt)
cor(mtcars$disp, mtcars$hp)
cor(mtcars$disp, mtcars$carb)
corTable <- cor(mtcars)
corhead(corTable)
head(corTable)
corTable
fit2 <- lm(mpg ~ factor(am) + cyl + disp + hp + wt + carb + vs, data = mtcars)
summary(fit2)
fit1 <- lm(mpg ~ factor(am), data = mtcars)
summary(fit1)
fit2 <- lm(mpg ~ factor(am) + cyl + disp + hp + wt + carb + vs, data = mtcars)
summary(fit2)
sqrt(vif(fit2))
fit3 <- lm(mpg ~ factor(am) + cyl + hp + wt + carb + vs, data = mtcars)
summary(fit3)
fit3 <- lm(mpg ~ factor(am) + cyl + hp + wt + carb + vs - 1, data = mtcars)
summary(fit3)
sqrt(vif(fit3))
#remove disp as worst variable
fit3 <- lm(mpg ~ factor(am) + cyl + hp + wt + carb + vs, data = mtcars)
summary(fit3)
sqrt(vif(fit3))
#remove vs and cyl
fit4 <- lm(mpg ~ factor(am) + hp + wt + carb, data = mtcars)
summary(fit4)
sqrt(vif(fit4))
#everything is well balanced so will try these for the models
mdl1 <- lm(mpg ~ factor(am) + hp - 1, data = mtcars)
mdl2 <- lm(mpg ~ factor(am) + wt - 1, data = mtcars)
mdl3 <- lm(mpg ~ factor(am) + carb - 1, data = mtcars)
mdl4 <- lm(mpg ~ factor(am) + hp + wt - 1, data = mtcars)
mdl5 <- lm(mpg ~ factor(am) + hp + carb - 1, data = mtcars)
mdl6 <- lm(mpg ~ factor(am) + wt + carb - 1, data = mtcars)
mdl7 <- lm(mpg ~ factor(am) + hp + wt + carb - 1, data = mtcars)
anova(mdl1, mdl2, mdl3, mdl4, mdl5, mdl6, mdl7)
summary(mdl3)
summary(mdl1)
summary(mdl2)
summary(mdl4)
?anova
#anova gives the best model as mdl4 given high F value and lowest Pr(>F)
model <- mdl4
summary(model)
anova(mdl1, mdl4)
summary(mdl1)
sigma(model)/mean(mtcars$mpg)
sigma(mdl1)/mean(mtcars$mpg)
#diagnostics and residual plot
plot(predict(model), resid(model))
plot(model)
#diagnostics and residual plot
par(mfrow = c(2, 2))
plot(model)
par(mfrow = c(1, 1))
plot(predict(model), resid(model))
hatvalues(model)
dfbetas(model)
plot(hatval)
hatval <- hatvalues(model)
plot(hatval)
plot(dfbetas(model))
plot(hatvalues(model))
plot(dfbetas(model))
plot(dffits(model))
abline(h = 2*sqrt((length(model$coefficients) - 1) / nrow(mtcars))
)
plot(hatvalues(model))
plot(dfbetas(model))
#diagnostics and residual plot
par(mfrow = c(2, 2))
plot(model)
par(mfrow = c(1, 1))
plot(predict(model), resid(model))
plot(dfbetas(model))
plot(dffits(model))
abline(h = 2*sqrt((length(model$coefficients) - 1) / nrow(mtcars)))
model
summary(model)
?mtcars
#quantify uncertainty and interpret coefficients
#automatic transmission has 34.0 MPG on average
#manual transmission has 36.1 MPG on average
sumModel <- summary(model)$coefficients
sumModel
confint(model)[1,]
confint(model)[2,]
summary(fit1)
confint(fit1)[1,]
confint(fit1)[2,]
fit1 <- lm(mpg ~ factor(am) - 1, data = mtcars)
confint(fit1)[1,]
confint(fit1)[2,]
mdl <- lm(mpg ~ factor(am) + hp + wt, data = mtcars)
summary(mdl)
confint(mdl)[1,]
confint(mdl)[2,]
#everything is well balanced so will try these for the models
mdl1 <- lm(mpg ~ factor(am) + hp - 1, data = mtcars)
mdl2 <- lm(mpg ~ factor(am) + wt - 1, data = mtcars)
mdl3 <- lm(mpg ~ factor(am) + carb - 1, data = mtcars)
mdl4 <- lm(mpg ~ factor(am) + hp + wt - 1, data = mtcars)
mdl5 <- lm(mpg ~ factor(am) + hp + carb - 1, data = mtcars)
mdl6 <- lm(mpg ~ factor(am) + wt + carb - 1, data = mtcars)
mdl7 <- lm(mpg ~ factor(am) + hp + wt + carb - 1, data = mtcars)
anova(mdl1, mdl2, mdl3, mdl4, mdl5, mdl6, mdl7)
#anova gives the best model as mdl4 given high F value and lowest Pr(>F)
mdl8 <- lm(mpg ~ factor(am) + hp * wt - 1, data = mtcars)
anova(mdl4, mdl8)
anova(mdl1, mdl4, mdl8)
anova(mdl8, mdl4)
anova(mdl8, mdl4, mdl1)
anova(mdl4, mdl1)
anova(mdl4, mdl8)
anova(mdl8, mdl4)
summary(mdl8)
summary(mdl4)
model <- mdl4
#diagnostics and residual plot
par(mfrow = c(2, 2))
plot(model)
par(mfrow = c(1, 1))
plot(predict(model), resid(model))
plot(hatvalues(model))
plot(dfbetas(model))
plot(dffits(model))
abline(h = 2*sqrt((length(model$coefficients) - 1) / nrow(mtcars)))
#quantify uncertainty and interpret coefficients
#automatic transmission has 34.0 MPG on average
#manual transmission has 36.1 MPG on average
confint(model)[1,]
confint(model)[2,]
model$coefficients[1,]
model$coefficients[1]
?mtcars
length(mtcars$am)
sum(mtcars$am)
summary(model)
summary(model)$std.error
str(summary(model))
sm <- summary(model)
sm$sigma
summary(model)$coefficients[,2]
summary(model)$coefficients[1,2]
summary(model)$coefficients[2,2]
t.valueAuto <- model$coefficients[1] + c(-1, 1) *
qt(.975, (length(mtcars$am) - sum(mtcars$am) - 1)) *
summary(model)$coefficients[1,2]
t.valueAuto
#quantify uncertainty and interpret coefficients
#automatic transmission has 34.0 MPG on average
#manual transmission has 36.1 MPG on average
confint(model)[1,]
confint(model)[2,]
mean(mtcars$hp)
mean(mtcars$wt)
hpmn <- mean(mtcars$hp)
wtmn <- mean(mtcars$wt)
predict(model, newdata = data.frame(am = 0, hp = hpmn, wt = wtmn),
interval = "prediction")
predict(model, newdata = data.frame(am = 1, hp = hpmn, wt = wtmn),
interval = "prediction")
corTable <- cor(mtcars)
corTable
boxplot(mpg ~ am, data = mtcars, col = "red", ylab = "MPG",
xlab = "Transmission (0 = automatic,1 = manual)",
main = "MPG Based on Transmission Type")
pairs(mtcars)
#items that affect MPG similarly given MPG vs variable graphs
group1 <- c("disp", "hp", "wt", "carb")
group2 <- c("drat", "qsec")
group3 <- c("vs", "am")
corTable <- cor(mtcars)
cor(mtcars)
#items that affect MPG similarly given MPG vs variable graphs
group1 <- c("disp", "hp", "wt", "carb")
group2 <- c("drat", "qsec")
group3 <- c("vs", "am")
fit1 <- lm(mpg ~ factor(am) - 1, data = mtcars)
summary(fit1)
#remove vs and cyl
fit4 <- lm(mpg ~ factor(am) + hp + wt + carb, data = mtcars)
summary(fit4)
summary(fit1)
summary(model)
fit2 <- lm(mpg ~ factor(am) + cyl + disp + hp + wt + carb + vs, data = mtcars)
summary(fit2)
sqrt(vif(fit2))
#models
library(car)
sqrt(vif(fit2))
#remove disp as worst variable
fit3 <- lm(mpg ~ factor(am) + cyl + hp + wt + carb + vs, data = mtcars)
summary(fit3)
sqrt(vif(fit3))
#everything is well balanced so will try these for the models
mdl0 <- lm(mpg ~ factor(am) - 1, data = mtcars)
mdl1 <- lm(mpg ~ factor(am) + hp - 1, data = mtcars)
mdl2 <- lm(mpg ~ factor(am) + wt - 1, data = mtcars)
mdl3 <- lm(mpg ~ factor(am) + carb - 1, data = mtcars)
mdl4 <- lm(mpg ~ factor(am) + hp + wt - 1, data = mtcars)
mdl5 <- lm(mpg ~ factor(am) + hp + carb - 1, data = mtcars)
mdl6 <- lm(mpg ~ factor(am) + wt + carb - 1, data = mtcars)
mdl7 <- lm(mpg ~ factor(am) + hp + wt + carb - 1, data = mtcars)
anova(mdl0, mdl1, mdl2, mdl3, mdl4, mdl5, mdl6, mdl7)
#everything is well balanced so will try these for the models
mdl1 <- lm(mpg ~ factor(am) - 1, data = mtcars)
mdl2 <- lm(mpg ~ factor(am) + hp - 1, data = mtcars)
mdl3 <- lm(mpg ~ factor(am) + wt - 1, data = mtcars)
mdl4 <- lm(mpg ~ factor(am) + carb - 1, data = mtcars)
mdl5 <- lm(mpg ~ factor(am) + hp + wt - 1, data = mtcars)
mdl6 <- lm(mpg ~ factor(am) + hp + carb - 1, data = mtcars)
mdl7 <- lm(mpg ~ factor(am) + wt + carb - 1, data = mtcars)
mdl8 <- lm(mpg ~ factor(am) + hp + wt + carb - 1, data = mtcars)
anova(mdl1, mdl2, mdl3, mdl4, mdl5, mdl6, mdl7, mdl8)
summary(mdl2)
summary(mdl1)
#anova gives the best model as mdl2 given high F value and lowest Pr(>F)
model <- mdl2
summary(model)
#diagnostics and residual plot
par(mfrow = c(2, 2))
plot(model)
par(mfrow = c(1, 1))
plot(predict(model), resid(model))
plot(hatvalues(model))
plot(dfbetas(model))
plot(dffits(model))
abline(h = 2*sqrt((length(model$coefficients) - 1) / nrow(mtcars)))
#quantify uncertainty and interpret coefficients
#automatic transmission has 34.0 MPG on average
#manual transmission has 36.1 MPG on average
confint(model)[1,]
confint(model)[2,]
predict(model, newdata = data.frame(am = 0, hp = hpmn, wt = wtmn),
interval = "prediction")
hpmn <- mean(mtcars$hp)
predict(model, newdata = data.frame(am = 0, hp = hpmn),
interval = "prediction")
predict(model, newdata = data.frame(am = 1, hp = hpmn),
interval = "prediction")
#diagnostics and residual plot
par(mfrow = c(2, 2))
plot(model)
par(mfrow = c(1, 1))
plot(predict(model), resid(model))
#diagnostics and residual plot
par(mfrow = c(2, 2))
plot(model)
par(mfrow = c(1, 1))
plot(model)
#diagnostics and residual plot
par(mfrow = c(2, 2))
plot(model)
par(mfrow = c(1, 1))
plot(hatvalues(model))
plot(dfbetas(model))
plot(dffits(model))
abline(h = 2*sqrt((length(model$coefficients) - 1) / nrow(mtcars)))
plot(hatvalues(model))
plot(dfbetas(model))
plot(hatvalues(model))
text(hatvalues(model), labels=rownames(mtcars),data=mtcars, cex=0.9, font=2)
plot(hatvalues(model))
text(hatvalues(model), labels=rownames(mtcars),data=mtcars, cex=0.5)
plot(dfbetas(model))
text(hatvalues(model), labels=rownames(mtcars),data=mtcars, cex=0.5)
plot(dfbetas(model))
text(dfbetas(model), labels=rownames(mtcars),data=mtcars, cex=0.5)
rstudent(model)
plot(hatvalues(model))
text(hatvalues(model), labels=rownames(mtcars),data=mtcars, cex=0.5)
plot(dfbetas(model))
text(dfbetas(model), labels=rownames(mtcars),data=mtcars, cex=0.5)
mtcars
#quantify uncertainty and interpret coefficients
#automatic transmission has 34.0 MPG on average
#manual transmission has 36.1 MPG on average
confint(model)[1,]
confint(model)[2,]
hpmn <- mean(mtcars$hp)
predict(model, newdata = data.frame(am = 0, hp = hpmn),
interval = "prediction")
predict(model, newdata = data.frame(am = 1, hp = hpmn),
interval = "prediction")
par(mfrow = c(1, 1))
plot(hatvalues(model))
text(hatvalues(model), labels=rownames(mtcars),data=mtcars, cex=0.5)
plot(hatvalues(model))
text(hatvalues(model), labels=rownames(mtcars),data=mtcars, cex=0.6)
plot(hatvalues(model))
text(hatvalues(model), labels=rownames(mtcars),data=mtcars, cex=0.6)
plot(hatvalues(model))
text(hatvalues(model), labels=rownames(mtcars), cex=0.6)
plot(dfbetas(model))
text(dfbetas(model), labels=rownames(mtcars), cex=0.5)
plot(hatvalues(model))
plot(hatvalues(model), ylab = "Hatvalue", main = "Hatvalues of Model",
pch = 19, col = "orange")
text(hatvalues(model), labels=rownames(mtcars), cex=0.6)
plot(hatvalues(model), ylab = "Hatvalue", main = "Hatvalues of Model",
pch = 19, col = "orange", cex = 1.5)
text(hatvalues(model), labels=rownames(mtcars), cex=0.6)
plot(dfbetas(model), main = "Hatvalues of Model",
pch = 19, col = "green", cex = 1.5)
plot(dfbetas(model), main = "Dfbeta Values of Model",
pch = 19, col = "green", cex = 1.5)
text(dfbetas(model), labels=rownames(mtcars), cex=0.6)
plot(dfbetas(model), main = "Dfbeta Values of Model",
xlab = "Automatic Transmission", ylab = "Manual Transmission"
pch = 19, col = "green", cex = 1.5)
plot(dfbetas(model), main = "Dfbeta Values of Model",
xlab = "Automatic Transmission", ylab = "Manual Transmission",
pch = 19, col = "green", cex = 1.5)
text(dfbetas(model), labels=rownames(mtcars), cex=0.6)
#quantify uncertainty and interpret coefficients
#automatic transmission has 34.0 MPG on average
#manual transmission has 36.1 MPG on average
confint(model)[1,]
confint(model)[2,]
hpmn <- mean(mtcars$hp)
predict(model, newdata = data.frame(am = 0, hp = hpmn),
interval = "prediction")
predict(model, newdata = data.frame(am = 1, hp = hpmn),
interval = "prediction")
summary(model)
31.9-26.6
